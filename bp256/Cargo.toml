[package]
name = "bp256"
version = "0.7.0-pre"
description = "Brainpool P-256 (brainpoolP256r1 and brainpoolP256t1) elliptic curves"
authors = ["RustCrypto Developers"]
license = "Apache-2.0 OR MIT"
documentation = "https://docs.rs/bp256"
repository = "https://github.com/RustCrypto/elliptic-curves/tree/master/bp256"
readme = "README.md"
categories = ["cryptography", "no-std"]
keywords = ["brainpool", "crypto", "ecc"]
edition = "2021"
rust-version = "1.73"

[dependencies]
elliptic-curve = { version = "=0.14.0-pre.5", default-features = false, features = ["hazmat", "sec1"] }

# optional dependencies
ecdsa = { version = "=0.17.0-pre.5", optional = true, default-features = false, features = ["der"] }
primeorder = { version = "=0.14.0-pre.0", optional = true, path = "../primeorder" }
sha2 = { version = "=0.11.0-pre.3", optional = true, default-features = false }
hex-literal = { version = "0.4", optional = true }

[dev-dependencies]
hex-literal = "0.4"

[features]
default = ["pkcs8", "std", "wip-arithmetic-do-not-use"] # change back asap
alloc = ["ecdsa?/alloc", "elliptic-curve/alloc", "primeorder?/alloc"]
std = ["alloc", "ecdsa?/std", "elliptic-curve/std"]

pem = ["elliptic-curve/pem", "pkcs8"]
pkcs8 = ["ecdsa/pkcs8", "elliptic-curve/pkcs8"]
serde = ["ecdsa/serde", "elliptic-curve/serde"]
sha256 = ["ecdsa/digest", "ecdsa/hazmat", "sha2"]
wip-arithmetic-do-not-use = ["dep:primeorder","dep:hex-literal"]
test-vectors = ["dep:hex-literal"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
